apply plugin: 'com.android.application'

sourceSets {
  main {
    java.srcDir file('src/main/java/src')
  }
  unitTest {
    java.srcDir file('tests/unit/src')
  }
  automation {
    java.srcDir file('src/androidTest/java/src')
  }
}

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:1.1.3'
  }
}

android {
  compileSdkVersion 22
  buildToolsVersion "22.0.0"

  defaultConfig {
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }

  lintOptions {
    abortOnError true
    checkAllWarnings true
    warningsAsErrors true
    textReport true
    textOutput 'stdout'
    xmlReport false
    htmlReport true
  }

  signingConfigs {
    release {
      gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(':assembleRelease')) {
          def pass = System.console().readPassword("\nPlease enter key passphrase: ")
          pass = new String(pass)

          if (pass.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
          }

          storeFile file("pct-release-key.keystore")
          keyAlias "pctkey"
          storePassword pass
          keyPassword pass
        }
      }
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }
}

repositories {
  mavenCentral()
}

// --------------- Automation -----------
dependencies {
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
  androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
}

// ----------- Unit tests ---------------

// extend the runtime
configurations {
  unitTestCompile.extendsFrom runtime
  unitTestRuntime.extendsFrom unitTestCompile
}

// add to dependencies
dependencies {
  unitTestCompile fileTree(
    dir: "$project.buildDir/intermediates/exploded-aar/",
    include: "**/classes.jar"
  )
  unitTestCompile files("$project.buildDir/intermediates/classes/debug")
  unitTestCompile files("$project.buildDir/intermediates/res/debug")
  unitTestCompile 'org.robolectric:robolectric:2.4'
  unitTestCompile 'junit:junit:4.12'
  unitTestCompile 'org.apache.commons:commons-lang3:3.3.2'
  unitTestCompile 'org.mockito:mockito-core:1.10.19'
  unitTestCompile 'com.google.android:android:4.0.1.2'
}

// add the unitTest task
task unitTest(type:Test, dependsOn: assembleDebug) {
  description = "run unit tests"
  testClassesDir = project.sourceSets.unitTest.output.classesDir
  classpath = project.sourceSets.unitTest.runtimeClasspath
}

// ------------ Checkstyle ---------------
apply plugin: 'checkstyle'
checkstyle {
  ignoreFailures = false
  showViolations = true
}

task health(dependsOn: [
  'checkstyleMain',
  'checkstyleUnitTest',
  'checkstyleAutomation',
  'lint',
  'pmdMain',
  'pmdUnitTest',
  'assembleDebug',
  'unitTest',
  'connectedAndroidTest'
])

// ---------------- Pmd ------------------
apply plugin: 'pmd'
pmd {
  ruleSets = []
  ruleSetFiles = files('config/pmd/rulesets.xml')
  consoleOutput = true
}

compileJava.enabled = false
compileUnitTestJava.enabled = false
compileAutomationJava.enabled = false
